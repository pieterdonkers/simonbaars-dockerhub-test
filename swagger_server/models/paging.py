# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Paging(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, total_items: int=None, total_pages: int=None, page_size: int=None, current_page: int=None):  # noqa: E501
        """Paging - a model defined in Swagger

        :param total_items: The total_items of this Paging.  # noqa: E501
        :type total_items: int
        :param total_pages: The total_pages of this Paging.  # noqa: E501
        :type total_pages: int
        :param page_size: The page_size of this Paging.  # noqa: E501
        :type page_size: int
        :param current_page: The current_page of this Paging.  # noqa: E501
        :type current_page: int
        """
        self.swagger_types = {
            'total_items': int,
            'total_pages': int,
            'page_size': int,
            'current_page': int
        }

        self.attribute_map = {
            'total_items': 'totalItems',
            'total_pages': 'totalPages',
            'page_size': 'pageSize',
            'current_page': 'currentPage'
        }

        self._total_items = total_items
        self._total_pages = total_pages
        self._page_size = page_size
        self._current_page = current_page

    @classmethod
    def from_dict(cls, dikt) -> 'Paging':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Paging of this Paging.  # noqa: E501
        :rtype: Paging
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_items(self) -> int:
        """Gets the total_items of this Paging.


        :return: The total_items of this Paging.
        :rtype: int
        """
        return self._total_items

    @total_items.setter
    def total_items(self, total_items: int):
        """Sets the total_items of this Paging.


        :param total_items: The total_items of this Paging.
        :type total_items: int
        """

        self._total_items = total_items

    @property
    def total_pages(self) -> int:
        """Gets the total_pages of this Paging.


        :return: The total_pages of this Paging.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages: int):
        """Sets the total_pages of this Paging.


        :param total_pages: The total_pages of this Paging.
        :type total_pages: int
        """

        self._total_pages = total_pages

    @property
    def page_size(self) -> int:
        """Gets the page_size of this Paging.


        :return: The page_size of this Paging.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """Sets the page_size of this Paging.


        :param page_size: The page_size of this Paging.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def current_page(self) -> int:
        """Gets the current_page of this Paging.


        :return: The current_page of this Paging.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page: int):
        """Sets the current_page of this Paging.


        :param current_page: The current_page of this Paging.
        :type current_page: int
        """

        self._current_page = current_page
